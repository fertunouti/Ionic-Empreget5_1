{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/apiService\";\nfunction ReadPrestadorComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\")(1, \"ion-item\")(2, \"ion-avatar\", 1);\n    i0.ɵɵelement(3, \"ion-icon\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-label\", 3);\n    i0.ɵɵlistener(\"click\", function ReadPrestadorComponent_ul_0_Template_ion_label_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const prestador_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(prestador_r1.id));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-col\", 4)(12, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function ReadPrestadorComponent_ul_0_Template_ion_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const prestador_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(prestador_r1.id));\n    });\n    i0.ɵɵtext(13, \"ver perfil\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const prestador_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", prestador_r1.nome, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prestador_r1.regiao);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R$\", i0.ɵɵpipeBind2(10, 3, prestador_r1.servico.valor, \"1.2-2\"), \"\");\n  }\n}\nexport class ReadPrestadorComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    this.readPrestador();\n  }\n  //Obtém perfil dos prestadores em apiService\n  readPrestador() {\n    this.apiService.getDataPerfisPrestadores().subscribe(data => {\n      this.prestadores = data;\n      console.log('Dados dos prestadores:', this.prestadores);\n    }, error => {\n      console.error('Erro ao obter dados dos prestadores:', error);\n    });\n  }\n  onClick(id) {\n    this.apiService.addId(id);\n  }\n}\nReadPrestadorComponent.ɵfac = function ReadPrestadorComponent_Factory(t) {\n  return new (t || ReadPrestadorComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\nReadPrestadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadPrestadorComponent,\n  selectors: [[\"app-read-prestador\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"slot\", \"start\"], [\"name\", \"person-outline\"], [\"fill\", \"clear\", \"routerLink\", \"/perfil-prestador\", 3, \"click\"], [1, \"coluna-view\"]],\n  template: function ReadPrestadorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ReadPrestadorComponent_ul_0_Template, 14, 6, \"ul\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.prestadores);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAGIA,0BAA0C;IAIpCA,8BAA2C;IAE7CA,iBAAa;IAEbA,oCAAuF;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IACpFA,YAAmB;IAAAA,yBAAG;IAAAA,YAAoB;IAAAA,iBAAI;IAC9CA,yBAAG;IAAAA,YAA8C;;IAAAA,iBAAI;IAEvDA,mCAA6B;IAC8BA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAACA,2BAAU;IAAAA,iBAAa;;;;IAJhHA,eAAmB;IAAnBA,kDAAmB;IAAGA,eAAoB;IAApBA,yCAAoB;IACvCA,eAA8C;IAA9CA,2FAA8C;;;ACL3D,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAgB;EAG9CC,QAAQ;IAAI,IAAI,CAACC,aAAa,EAAE;EAAA;EAEhC;EACAA,aAAa;IACV,IAAI,CAACF,UAAU,CAACG,wBAAwB,EAAE,CAACC,SAAS,CACnDC,IAAI,IAAI;MACN,IAAI,CAACC,WAAW,GAAGD,IAAI;MACxBE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACF,WAAW,CAAC;IACxD,CAAC,EACDG,KAAK,IAAI;MACPF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CACD;EACH;EAEAC,OAAO,CAACC,EAAS;IAChB,IAAI,CAACX,UAAU,CAACY,KAAK,CAACD,EAAE,CAAC;EAC1B;;;mBAtBUb,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDL/BpB,sEAgBK;;;MAhBqBA,yCAAc","names":["i0","ReadPrestadorComponent","constructor","apiService","ngOnInit","readPrestador","getDataPerfisPrestadores","subscribe","data","prestadores","console","log","error","onClick","id","addId","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\components\\read-prestador\\read-prestador.component.html","D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\components\\read-prestador\\read-prestador.component.ts"],"sourcesContent":["\n\n\n    <ul *ngFor=\"let prestador of prestadores\">\n\n      <ion-item>\n        <ion-avatar slot=\"start\">\n          <ion-icon name=\"person-outline\"></ion-icon>\n          <!-- <img alt=\"Silhouette of a person's head\" src=\"../../../../assets/images/avatar1.png\" /> -->\n        </ion-avatar>\n        \n        <ion-label fill=\"clear\" routerLink=\"/perfil-prestador\" (click)=\"onClick(prestador.id)\">\n          {{prestador.nome}} <p>{{prestador.regiao}}</p>\n          <p>R${{prestador.servico.valor | number:'1.2-2'}}</p>\n        </ion-label>\n        <ion-col class=\"coluna-view\">\n           <ion-button fill=\"clear\" routerLink=\"/perfil-prestador\" (click)=\"onClick(prestador.id)\">ver perfil</ion-button> \n        </ion-col>\n      </ion-item>\n    </ul>\n\n    <!-- (click)=\"onClick(prestador.id)\" -->\n    \n\n ","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/apiService';\n\n@Component({\n  selector: 'app-read-prestador',\n  templateUrl: './read-prestador.component.html',\n  styleUrls: ['./read-prestador.component.scss'],\n})\nexport class ReadPrestadorComponent  implements OnInit {\n\n  constructor(private apiService: ApiService) { }\n  prestadores!: any\n  \n  ngOnInit() {this.readPrestador()}\n\n  //Obtém perfil dos prestadores em apiService\n  readPrestador(): void {\n     this.apiService.getDataPerfisPrestadores().subscribe(\n     (data) => {\n        this.prestadores = data;\n       console.log('Dados dos prestadores:', this.prestadores);\n      },\n     (error) => {\n        console.error('Erro ao obter dados dos prestadores:', error);\n      }\n     );\n   }\n\n   onClick(id:number){\n    this.apiService.addId(id)\n   }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}