{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/apiService\";\nimport * as i3 from \"@angular/router\";\nexport class LoginPage {\n  constructor(authService, apiService, router) {\n    this.authService = authService;\n    this.apiService = apiService;\n    this.router = router;\n    this.email = '';\n    this.senha = '';\n    this.mudouLogin = new EventEmitter();\n  }\n  onLogin() {\n    const {\n      email,\n      senha\n    } = this;\n    this.authService.login(email, senha).subscribe(response => {\n      const decodedToken = jwt_decode(response.token);\n      const role = decodedToken.sub.split(';');\n      const userEmail = role[0];\n      const userRole = role[1];\n      this.apiService.setUserRole(userRole);\n      //Aciona evento onLogado() na Hello html\n      this.mudouLogin.emit({\n        loginSucesso: true\n      });\n      // Configurar o token JWT no ApiService\n      this.apiService.setAuthToken(response.token);\n      // Defina o token JWT como um cookie\n      this.setTokenCookie(response.token);\n    }, error => {\n      console.error('Erro no login:', error);\n      //this.mudouLogin.emit({loginErro:true})\n    });\n  }\n\n  setTokenCookie(token) {\n    // Defina o cookie com o nome \"jwt_token\" e o valor do token recebido\n    document.cookie = `jwt_token=${token}; path=/; HttpOnly`;\n  }\n  ngOnInit() {}\n}\nLoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPage,\n  selectors: [[\"app-login\"]],\n  outputs: {\n    mudouLogin: \"mudouLogin\"\n  },\n  decls: 41,\n  vars: 3,\n  consts: [[1, \"card\"], [3, \"translucent\"], [2, \"height\", \"100%\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"center\"], [\"src\", \"../../../../assets/images/Logo-transparente.png\", \"alt\", \"logo\"], [\"fill\", \"outline\", 2, \"margin-bottom\", \"10px\"], [\"name\", \"mail-outline\", \"slot\", \"start\"], [\"type\", \"email\", \"name\", \"email\", \"email\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"slot\", \"error\"], [\"name\", \"lock-closed-outline\", \"slot\", \"start\"], [\"type\", \"password\", \"name\", \"senha\", 3, \"ngModel\", \"ngModelChange\"], [\"slot\", \"start\"], [1, \"sublinhado\"], [\"slot\", \"end\", 1, \"sublinhado\"], [\"routerLink\", \"/esqueci-senha\", \"fill\", \"clear\"], [1, \"ion-justify-content-center\"], [\"size\", \"6\"], [\"size\", \"small\", \"fill\", \"solid\", \"color\", \"primary\", \"expand\", \"block\", 3, \"click\"], [\"size\", \"small\", \"fill\", \"outline\", \"color\", \"primary\", \"expand\", \"block\", \"routerLink\", \"/tipo-user\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-card-content\", 0)(1, \"ion-card-header\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"ion-item\", 4);\n      i0.ɵɵelement(5, \"ion-icon\", 5);\n      i0.ɵɵelementStart(6, \"ion-label\");\n      i0.ɵɵtext(7, \"Usu\\u00E1rio: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\")(9, \"ion-input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_9_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-note\", 7);\n      i0.ɵɵtext(11, \"E-mail inv\\u00E1lido\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"ion-item\", 4);\n      i0.ɵɵelement(13, \"ion-icon\", 8);\n      i0.ɵɵelementStart(14, \"ion-label\");\n      i0.ɵɵtext(15, \"Senha: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"form\")(17, \"ion-input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_17_listener($event) {\n        return ctx.senha = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"ion-note\", 7);\n      i0.ɵɵtext(19, \"Senha inv\\u00E1lida\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"ion-item\");\n      i0.ɵɵelement(21, \"ion-checkbox\", 10);\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"p\");\n      i0.ɵɵtext(24, \"Lembrar senha\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 12)(26, \"p\");\n      i0.ɵɵtext(27, \"Esqueci a senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"ion-buttons\")(29, \"ion-button\", 13);\n      i0.ɵɵtext(30, \" Esqueci a senha \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(31, \"br\")(32, \"br\");\n      i0.ɵɵelementStart(33, \"ion-grid\")(34, \"ion-row\", 14)(35, \"ion-col\", 15)(36, \"ion-button\", 16);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_36_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(37, \"Entrar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"ion-col\", 15)(39, \"ion-button\", 17);\n      i0.ɵɵtext(40, \"Cadastrar-se\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.senha);\n    }\n  },\n  styles: [\".card[_ngcontent-%COMP%] {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  font-size: 12px;\\n  padding-top: 50%;\\n}\\n\\n.sublinhado[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  font-size: 10px;\\n  font-style: italic;\\n  font-weight: 500;\\n  text-decoration: underline;\\n}\\n.sublinhado[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%] {\\n  text-transform: none;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  padding-bottom: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0csaUNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSDs7QUFFQTtFQUNHLHVCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSwwQkFBQTtBQUNIO0FBQU07RUFDRyxvQkFBQTtBQUVUOztBQUVBO0VBQ0csdUJBQUE7RUFDQSxtQkFBQTtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XHJcbiAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgZm9udC1zaXplOiAxMnB4OyBcclxuICAgcGFkZGluZy10b3A6IDUwJTtcclxuIFxyXG59XHJcbi5zdWJsaW5oYWRve1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgZm9udC1zaXplOiAxMHB4OyBcclxuICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICBmb250LXdlaWdodDogNTAwIDtcclxuICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgIGlvbi1idXR0b257XHJcbiAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICB9XHJcbiAgIFxyXG59XHJcbmltZ3tcclxuICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIHBhZGRpbmctYm90dG9tOiAxNSU7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAoCA,YAAY,QAAQ,eAAe;AACvE,OAAOC,UAAU,MAAM,YAAY;;;;;AAOnC,OAAM,MAAOC,SAAS;EAOpBC,YAAoBC,WAAwB,EAAUC,UAAsB,EAAUC,MAAc;IAAhF,gBAAW,GAAXF,WAAW;IAAuB,eAAU,GAAVC,UAAU;IAAsB,WAAM,GAANC,MAAM;IAL5F,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAER,eAAU,GAAG,IAAIN,YAAY,EAAE;EAE+D;EAExGO,OAAO;IACL,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAG,IAAI;IAC7B,IAAI,CAACL,WAAW,CAACM,KAAK,CAACF,KAAK,EAAEC,KAAK,CAAC,CAACE,SAAS,CAC3CC,QAAa,IAAI;MAEhB,MAAMC,YAAY,GAAQZ,UAAU,CAACW,QAAQ,CAACE,KAAK,CAAC;MAEpD,MAAMC,IAAI,GAAGF,YAAY,CAACG,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;MACxC,MAAMC,SAAS,GAAGH,IAAI,CAAC,CAAC,CAAC;MACzB,MAAMI,QAAQ,GAAGJ,IAAI,CAAC,CAAC,CAAC;MACxB,IAAI,CAACV,UAAU,CAACe,WAAW,CAACD,QAAQ,CAAC;MAErC;MACA,IAAI,CAACE,UAAU,CAACC,IAAI,CAAC;QAAEC,YAAY,EAAE;MAAI,CAAE,CAAC;MAG5C;MACA,IAAI,CAAClB,UAAU,CAACmB,YAAY,CAACZ,QAAQ,CAACE,KAAK,CAAC;MAE5C;MACA,IAAI,CAACW,cAAc,CAACb,QAAQ,CAACE,KAAK,CAAC;IAErC,CAAC,EACAY,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC,CACF;EACH;;EAGQD,cAAc,CAACX,KAAa;IAClC;IACAc,QAAQ,CAACC,MAAM,GAAG,aAAaf,KAAK,oBAAoB;EAC1D;EAEAgB,QAAQ,IACR;;;mBA9CW5B,SAAS;AAAA;;QAATA,SAAS;EAAA6B;EAAAC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;EAAAC;IAAA;MCTpBC,2CAA+B;MAKzBA,yBAAsE;MACxEA,iBAAM;MAKNA,mCAAsD;MACpDA,8BAAsD;MACtDA,iCAAW;MAAAA,8BAAS;MAAAA,iBAAY;MAChCA,4BAAM;MACoBA;QAAA;MAAA,EAAmB;MAAoBA,iBAAY;MAG7EA,oCAAuB;MAAAA,qCAAe;MAAAA,iBAAW;MAGnDA,oCAAuD;MACrDA,+BAA6D;MAC7DA,kCAAW;MAAAA,wBAAO;MAAAA,iBAAY;MAC9BA,6BAAM;MACuBA;QAAA;MAAA,EAAmB;MAAcA,iBAAY;MAG1EA,oCAAuB;MAAAA,oCAAc;MAAAA,iBAAW;MAIpDA,iCAAU;MACRA,oCAA0C;MAC1CA,gCAAwB;MACnBA,8BAAa;MAAAA,iBAAI;MAEtBA,gCAAmC;MAC9BA,gCAAe;MAAAA,iBAAI;MACtBA,oCAAa;MAETA,kCACF;MAAAA,iBAAa;MAKnBA,sBAAI;MACJA,iCAAU;MAGiEA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAa;MAE9GA,oCAAkB;MAEUA,6BAAY;MAAAA,iBAAa;;;MArDxCA,eAAoB;MAApBA,kCAAoB;MAaPA,eAAmB;MAAnBA,mCAAmB;MAUhBA,eAAmB;MAAnBA,mCAAmB","names":["EventEmitter","jwt_decode","LoginPage","constructor","authService","apiService","router","onLogin","email","senha","login","subscribe","response","decodedToken","token","role","sub","split","userEmail","userRole","setUserRole","mudouLogin","emit","loginSucesso","setAuthToken","setTokenCookie","error","console","document","cookie","ngOnInit","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\pages\\login\\login.page.ts","D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\pages\\login\\login.page.html"],"sourcesContent":["import { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ApiService } from '../../services/apiService';\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  email: string = '';\r\n  senha: string = '';\r\n\r\n  @Output() mudouLogin = new EventEmitter()\r\n\r\n  constructor(private authService: AuthService, private apiService: ApiService, private router: Router) { }\r\n\r\n  onLogin(): void {\r\n    const { email, senha } = this;\r\n    this.authService.login(email, senha).subscribe(\r\n      (response: any) => {\r\n\r\n        const decodedToken: any = jwt_decode(response.token);\r\n\r\n        const role = decodedToken.sub.split(';');\r\n        const userEmail = role[0];\r\n        const userRole = role[1]\r\n        this.apiService.setUserRole(userRole);\r\n        \r\n        //Aciona evento onLogado() na Hello html\r\n        this.mudouLogin.emit({ loginSucesso: true })\r\n\r\n\r\n        // Configurar o token JWT no ApiService\r\n        this.apiService.setAuthToken(response.token);\r\n\r\n        // Defina o token JWT como um cookie\r\n        this.setTokenCookie(response.token);\r\n\r\n      },\r\n      (error: any) => {\r\n        console.error('Erro no login:', error);\r\n        //this.mudouLogin.emit({loginErro:true})\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  private setTokenCookie(token: string): void {\r\n    // Defina o cookie com o nome \"jwt_token\" e o valor do token recebido\r\n    document.cookie = `jwt_token=${token}; path=/; HttpOnly`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <ion-content fullscreen=\"true\"> -->\r\n\r\n  <ion-card-content class=\"card\">\r\n\r\n    <ion-card-header [translucent]=\"true\">\r\n      <div style=\"height: 100%; display: flex; align-items: center; justify-content: center;\">\r\n\r\n        <img src=\"../../../../assets/images/Logo-transparente.png\" alt=\"logo\">\r\n      </div>\r\n    </ion-card-header>\r\n\r\n    <!-- <ion-card-content> -->\r\n\r\n      <ion-item fill=\"outline\" style=\"margin-bottom: 10px;\">\r\n        <ion-icon name=\"mail-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>Usuário: </ion-label>\r\n        <form>\r\n          <ion-input type=\"email\" [(ngModel)]=\"email\" name=\"email\" email></ion-input>\r\n        </form>\r\n\r\n        <ion-note slot=\"error\">E-mail inválido</ion-note>\r\n      </ion-item>\r\n\r\n      <ion-item fill=\"outline\" style=\" margin-bottom: 10px;\">\r\n        <ion-icon name=\"lock-closed-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>Senha: </ion-label>\r\n        <form>\r\n          <ion-input type=\"password\" [(ngModel)]=\"senha\" name=\"senha\"></ion-input>\r\n        </form>\r\n\r\n        <ion-note slot=\"error\">Senha inválida</ion-note>\r\n      </ion-item>\r\n\r\n    <!-- </ion-card-content> -->\r\n    <ion-item>\r\n      <ion-checkbox slot=\"start\"></ion-checkbox>\r\n      <div class=\"sublinhado\">\r\n        <p>Lembrar senha</p>\r\n      </div>\r\n      <div class=\"sublinhado\" slot=\"end\">\r\n        <p>Esqueci a senha</p>\r\n        <ion-buttons>\r\n          <ion-button routerLink=\"/esqueci-senha\" fill=\"clear\">\r\n            Esqueci a senha\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </div>\r\n    </ion-item>\r\n\r\n    <br><br>\r\n    <ion-grid>\r\n      <ion-row class=\"ion-justify-content-center\">\r\n        <ion-col size=\"6\">\r\n          <ion-button size=\"small\" fill=\"solid\" color=\"primary\" expand=\"block\" (click)=\"onLogin()\">Entrar</ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button size=\"small\" fill=\"outline\" color=\"primary\" expand=\"block\"\r\n            routerLink=\"/tipo-user\">Cadastrar-se</ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card-content>\r\n<!-- </ion-content> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}