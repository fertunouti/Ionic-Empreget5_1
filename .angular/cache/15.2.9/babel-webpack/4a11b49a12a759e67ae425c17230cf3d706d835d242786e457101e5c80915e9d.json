{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/apiService\";\nimport * as i2 from \"src/app/services/token.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/router\";\nfunction ReadPrestadorComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"ion-item\")(2, \"ion-avatar\", 1);\n    i0.ɵɵelement(3, \"img\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-label\", 3);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\", 4)(7, \"ion-button\", 3);\n    i0.ɵɵtext(8, \"view\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const prestador_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", prestador_r1.nome, \" \");\n  }\n}\nexport class ReadPrestadorComponent {\n  constructor(apiService, tokenService) {\n    this.apiService = apiService;\n    this.tokenService = tokenService;\n  }\n  ngOnInit() {\n    this.readPrestador();\n  }\n  //Obtém perfil dos prestadores em apiService\n  readPrestador() {\n    this.apiService.getDataPerfisPrestadores().subscribe(data => {\n      this.prestadores = data;\n      console.log('Dados dos prestadores:', this.prestadores);\n    }, error => {\n      console.error('Erro ao obter dados dos prestadores:', error);\n    });\n  }\n}\nReadPrestadorComponent.ɵfac = function ReadPrestadorComponent_Factory(t) {\n  return new (t || ReadPrestadorComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nReadPrestadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadPrestadorComponent,\n  selectors: [[\"app-read-prestador\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"slot\", \"start\"], [\"alt\", \"Silhouette of a person's head\", \"src\", \"../../../../assets/images/avatar1.png\"], [\"fill\", \"clear\", \"routerLink\", \"/perfil-prestador\"], [1, \"coluna-view\"]],\n  template: function ReadPrestadorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ReadPrestadorComponent_ul_0_Template, 9, 1, \"ul\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.prestadores);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.IonAvatar, i4.IonButton, i4.IonCol, i4.IonItem, i4.IonLabel, i4.RouterLinkDelegate, i5.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IACAA,0BAA0C;IAIxCA,yBAAuF;IACvFA,iBAAa;IACbA,oCAAuD;IACvDA,YACA;IAAAA,iBAAY;IACZA,kCAA6B;IAC2BA,oBAAI;IAAAA,iBAAa;;;;IAHzEA,eACA;IADAA,kDACA;;;ACEF,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,UAAsB,EAAUC,YAAyB;IAAzD,eAAU,GAAVD,UAAU;IAAsB,iBAAY,GAAZC,YAAY;EAAiB;EAGjFC,QAAQ;IAAI,IAAI,CAACC,aAAa,EAAE;EAAA;EAEhC;EACAA,aAAa;IACV,IAAI,CAACH,UAAU,CAACI,wBAAwB,EAAE,CAACC,SAAS,CACnDC,IAAI,IAAI;MACN,IAAI,CAACC,WAAW,GAAGD,IAAI;MACxBE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACF,WAAW,CAAC;IACxD,CAAC,EACDG,KAAK,IAAI;MACPF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CACD;EACH;;;mBAlBUZ,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVnClB,qEAaK;;;MAbqBA,yCAAc","names":["i0","ReadPrestadorComponent","constructor","apiService","tokenService","ngOnInit","readPrestador","getDataPerfisPrestadores","subscribe","data","prestadores","console","log","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\components\\read-prestador\\read-prestador.component.html","D:\\2023\\Codigos\\Ionic-EmpreGET5_1\\src\\app\\components\\read-prestador\\read-prestador.component.ts"],"sourcesContent":["\n<ul *ngFor=\"let prestador of prestadores\">\n\n  <ion-item>\n  <ion-avatar slot=\"start\">\n  <img alt=\"Silhouette of a person's head\" src=\"../../../../assets/images/avatar1.png\" />\n  </ion-avatar>\n  <ion-label fill=\"clear\" routerLink=\"/perfil-prestador\">\n  {{prestador.nome}}\n  </ion-label>\n  <ion-col class=\"coluna-view\">\n  <ion-button fill=\"clear\" routerLink=\"/perfil-prestador\">view</ion-button>\n  </ion-col>\n  </ion-item>\n</ul> \n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/apiService';\nimport { Observable } from 'rxjs';\nimport { TokenService } from 'src/app/services/token.service';\n\n\n@Component({\n  selector: 'app-read-prestador',\n  templateUrl: './read-prestador.component.html',\n  styleUrls: ['./read-prestador.component.scss'],\n})\nexport class ReadPrestadorComponent  implements OnInit {\n\n  constructor(private apiService: ApiService, private tokenService:TokenService) { }\n  prestadores!: any\n  \n  ngOnInit() {this.readPrestador()}\n\n  //Obtém perfil dos prestadores em apiService\n  readPrestador(): void {\n     this.apiService.getDataPerfisPrestadores().subscribe(\n     (data) => {\n        this.prestadores = data;\n       console.log('Dados dos prestadores:', this.prestadores);\n      },\n     (error) => {\n        console.error('Erro ao obter dados dos prestadores:', error);\n      }\n     );\n   }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}